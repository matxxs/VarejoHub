// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VarejoHub.Infrastructure.Data;

#nullable disable

namespace VarejoHub.Infrastructure.Migrations
{
    [DbContext(typeof(VarejoHubDbContext))]
    [Migration("20251003154556_AtualizandoInfoSupermacado")]
    partial class AtualizandoInfoSupermacado
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VarejoHub.Domain.Entities.Client", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdSupermercado")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PontosFidelidade")
                        .HasColumnType("int");

                    b.HasKey("IdCliente");

                    b.HasIndex("Cpf")
                        .IsUnique()
                        .HasFilter("[Cpf] IS NOT NULL");

                    b.HasIndex("IdSupermercado");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.FinancialTransaction", b =>
                {
                    b.Property<int>("IdTransacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTransacao"));

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("DataPagamentoRecebimento")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdSupermercado")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoTransacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdTransacao");

                    b.HasIndex("IdSupermercado");

                    b.ToTable("Transacao_Financeira");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Invoice", b =>
                {
                    b.Property<int>("IdFatura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFatura"));

                    b.Property<DateOnly?>("DataPagamento")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<int>("IdAssinatura")
                        .HasColumnType("int");

                    b.Property<int>("IdSupermercado")
                        .HasColumnType("int");

                    b.Property<string>("StatusFatura")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdFatura");

                    b.HasIndex("IdAssinatura");

                    b.HasIndex("IdSupermercado");

                    b.ToTable("Fatura");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.LogAuditoria", b =>
                {
                    b.Property<int>("IdLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLog"));

                    b.Property<string>("DadosAntigos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DadosNovos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataHoraAcao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRegistroAlterado")
                        .HasColumnType("int");

                    b.Property<int?>("IdSupermercado")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NomeTabela")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoOperacao")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("IdLog");

                    b.HasIndex("IdSupermercado");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Log_Auditoria");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Plan", b =>
                {
                    b.Property<int>("IdPlano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlano"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EAtivo")
                        .HasColumnType("bit");

                    b.Property<int?>("LimiteProdutos")
                        .HasColumnType("int");

                    b.Property<int?>("LimiteUsuarios")
                        .HasColumnType("int");

                    b.Property<string>("NomePlano")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ValorMensal")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdPlano");

                    b.ToTable("Plano");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Product", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduto"));

                    b.Property<int>("AlertaBaixoEstoque")
                        .HasColumnType("int");

                    b.Property<string>("CodigoBarras")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EstoqueAtual")
                        .HasColumnType("decimal(10, 3)");

                    b.Property<int>("IdSupermercado")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("PrecoCusto")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdProduto");

                    b.HasIndex("IdSupermercado");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("IdVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenda"));

                    b.Property<string>("CupomFiscalNumero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdSupermercado")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioCaixa")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdVenda");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdSupermercado");

                    b.HasIndex("IdUsuarioCaixa");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.SaleItem", b =>
                {
                    b.Property<int>("IdItemVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemVenda"));

                    b.Property<decimal>("Desconto")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("IdVenda")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoUnitarioPraticado")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(10, 3)");

                    b.HasKey("IdItemVenda");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdVenda");

                    b.ToTable("Item_Venda");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.StockMovement", b =>
                {
                    b.Property<int>("IdMovimentacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimentacao"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("IdSupermercado")
                        .HasColumnType("int");

                    b.Property<string>("NotaFiscalRef")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(10, 3)");

                    b.Property<string>("TipoMovimentacao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdMovimentacao");

                    b.HasIndex("IdProduto");

                    b.ToTable("Movimentacao_Estoque");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Subscription", b =>
                {
                    b.Property<int>("IdAssinatura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAssinatura"));

                    b.Property<DateOnly?>("DataCancelamento")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataInicioVigencia")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataProximoVencimento")
                        .HasColumnType("date");

                    b.Property<int>("IdPlano")
                        .HasColumnType("int");

                    b.Property<int>("IdSupermercado")
                        .HasColumnType("int");

                    b.Property<string>("StatusAssinatura")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdAssinatura");

                    b.HasIndex("IdPlano");

                    b.HasIndex("IdSupermercado")
                        .IsUnique();

                    b.ToTable("Assinatura");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Supermarket", b =>
                {
                    b.Property<int>("IdSupermercado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSupermercado"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("DataAdesao")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("DataInicioTrial")
                        .HasColumnType("date");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdSupermercado");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("Supermercado");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Supplier", b =>
                {
                    b.Property<int>("IdFornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFornecedor"));

                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdSupermercado")
                        .HasColumnType("int");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdFornecedor");

                    b.HasIndex("Cnpj")
                        .IsUnique()
                        .HasFilter("[Cnpj] IS NOT NULL");

                    b.HasIndex("IdSupermercado");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.User", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Confirmado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataExpiracaoToken")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EGlobalAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IdSupermercado")
                        .HasColumnType("int");

                    b.Property<string>("NivelAcesso")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TokenAcessoTemporario")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdSupermercado");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Client", b =>
                {
                    b.HasOne("VarejoHub.Domain.Entities.Supermarket", "Supermercado")
                        .WithMany("Clientes")
                        .HasForeignKey("IdSupermercado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supermercado");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.FinancialTransaction", b =>
                {
                    b.HasOne("VarejoHub.Domain.Entities.Supermarket", "Supermercado")
                        .WithMany()
                        .HasForeignKey("IdSupermercado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supermercado");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("VarejoHub.Domain.Entities.Subscription", "Assinatura")
                        .WithMany("Faturas")
                        .HasForeignKey("IdAssinatura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarejoHub.Domain.Entities.Supermarket", "Supermercado")
                        .WithMany("Faturas")
                        .HasForeignKey("IdSupermercado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Assinatura");

                    b.Navigation("Supermercado");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.LogAuditoria", b =>
                {
                    b.HasOne("VarejoHub.Domain.Entities.Supermarket", "Supermercado")
                        .WithMany()
                        .HasForeignKey("IdSupermercado");

                    b.HasOne("VarejoHub.Domain.Entities.User", "Usuario")
                        .WithMany("LogsAuditoria")
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Supermercado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Product", b =>
                {
                    b.HasOne("VarejoHub.Domain.Entities.Supermarket", "Supermercado")
                        .WithMany("Produtos")
                        .HasForeignKey("IdSupermercado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supermercado");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Sale", b =>
                {
                    b.HasOne("VarejoHub.Domain.Entities.Client", "Cliente")
                        .WithMany("Compras")
                        .HasForeignKey("IdCliente");

                    b.HasOne("VarejoHub.Domain.Entities.Supermarket", "Supermercado")
                        .WithMany("Vendas")
                        .HasForeignKey("IdSupermercado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarejoHub.Domain.Entities.User", "UsuarioCaixa")
                        .WithMany("VendasRealizadas")
                        .HasForeignKey("IdUsuarioCaixa");

                    b.Navigation("Cliente");

                    b.Navigation("Supermercado");

                    b.Navigation("UsuarioCaixa");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.SaleItem", b =>
                {
                    b.HasOne("VarejoHub.Domain.Entities.Product", "Produto")
                        .WithMany("ItensVenda")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VarejoHub.Domain.Entities.Sale", "Venda")
                        .WithMany("Itens")
                        .HasForeignKey("IdVenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.StockMovement", b =>
                {
                    b.HasOne("VarejoHub.Domain.Entities.Product", "Produto")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Subscription", b =>
                {
                    b.HasOne("VarejoHub.Domain.Entities.Plan", "Plano")
                        .WithMany("Assinaturas")
                        .HasForeignKey("IdPlano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarejoHub.Domain.Entities.Supermarket", "Supermercado")
                        .WithOne("Assinatura")
                        .HasForeignKey("VarejoHub.Domain.Entities.Subscription", "IdSupermercado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plano");

                    b.Navigation("Supermercado");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Supplier", b =>
                {
                    b.HasOne("VarejoHub.Domain.Entities.Supermarket", "Supermercado")
                        .WithMany("Fornecedores")
                        .HasForeignKey("IdSupermercado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supermercado");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.User", b =>
                {
                    b.HasOne("VarejoHub.Domain.Entities.Supermarket", "Supermercado")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdSupermercado");

                    b.Navigation("Supermercado");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Client", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Plan", b =>
                {
                    b.Navigation("Assinaturas");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Product", b =>
                {
                    b.Navigation("ItensVenda");

                    b.Navigation("Movimentacoes");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Sale", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Subscription", b =>
                {
                    b.Navigation("Faturas");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.Supermarket", b =>
                {
                    b.Navigation("Assinatura")
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Faturas");

                    b.Navigation("Fornecedores");

                    b.Navigation("Produtos");

                    b.Navigation("Usuarios");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("VarejoHub.Domain.Entities.User", b =>
                {
                    b.Navigation("LogsAuditoria");

                    b.Navigation("VendasRealizadas");
                });
#pragma warning restore 612, 618
        }
    }
}
